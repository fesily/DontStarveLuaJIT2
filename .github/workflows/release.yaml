name: build

permissions:
  contents: write

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  compile:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: windows-latest, target: windows, platform: win32-x64 }
          - { os: ubuntu-24.04,   target: linux,   platform: linux-x64 }
          - { os: macos-latest,   target: macos,   platform: macos-x64 }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.31.6     # <--= optional, stick to exactly 3.25.2 version
          ninjaVersion: 1.11.1     # <--= optional, stick to exactly 1.11.1 version
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      - name: Restore from cache and setup vcpkg executable and data files.
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Run CMake+vcpkg+Ninja+CTest to build packages and generate/build/test the code.
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-multi-vcpkg'
          configurePresetAdditionalArgs: "['-DCMAKE_OSX_ARCHITECTURES=x86_64']"
          buildPreset: 'ninja-vcpkg-release-dbg'

      - name: CMake install
        run: |
          cmake --build ./builds/ninja-multi-vcpkg --config RelWithDebInfo --target install

      - name: Clean Up linux
        if: ${{ matrix.target == 'linux' }}
        run: |
          rm -rf ${{ github.workspace }}/Mod/bin64/windows
          rm -rf ${{ github.workspace }}/Mod/bin64/osx

      - name: Clean Up windows
        if: ${{ matrix.target == 'windows' }}
        run: |
          rm -r ${{ github.workspace }}/Mod/bin64/osx
          rm -r ${{ github.workspace }}/Mod/bin64/linux

      - name: Clean Up macos
        if: ${{ matrix.target == 'macos' }}
        run: |
          rm -rf ${{ github.workspace }}/Mod/bin64/windows
          rm -r ${{ github.workspace }}/Mod/bin64/linux

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.5
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ./Mod
          filename: ${{ matrix.target}}_Mod.zip
          directory: ${{ github.workspace }}

      - name: Publish release asserts
        uses: ncipollo/release-action@v1.14.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          artifacts: '${{ matrix.target}}_Mod.zip'
          allowUpdates: true
